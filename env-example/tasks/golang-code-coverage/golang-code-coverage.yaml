apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: golang-code-coverage
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.27.1"
    tekton.dev/categories: Testing
    tekton.dev/tags: test
    tekton.dev/displayName: "golang test code"  
spec:
  description: |
    This task run golang code tests
  params:
    - name: version
      description: golang image version. (default = 1.15)
      default: "1.15"
    - name: GOOS
      description: operating system target
      default: linux
    - name: GOARCH
      description: architecture target
      default: amd64
    - name: CGO_ENABLED
      description: enable|disable CGO
      default: "1"      
    - name: GO111MODULE
      description: module support
      default: auto      

  steps:
    - name: test
      image: golang:$(params.version)
      workingDir: $(workspaces.golang-source.path)
      env:
      - name: CGO_ENABLED
        value: "$(params.CGO_ENABLED)"
      - name: GOOS
        value: "$(params.GOOS)"
      - name: GOARCH
        value: "$(params.GOARCH)"
      - name: GO111MODULE
        value: "$(params.GO111MODULE)" 
      script: |
        #!/bin/bash
        echo " "
        echo " "
        echo "INFO: Generating code coverage reports"
        go test $(workspaces.golang-source.path) -coverprofile cover.out

  workspaces:
    - name: golang-source