 
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kaniko
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.28.0"
    tekton.dev/categories: Image Build
    tekton.dev/tags: image-build
    tekton.dev/displayName: "Build and upload container image using Kaniko"
spec:
  description: >-
    This Task builds container image using Google's kaniko tool and push to GCR.

  params:
  - name: image_repo
    description: "Image repository (Ex: gcr.io/project123/myimage)"
  - name: image_tag
    description: Image tag  
  - name: dockerfile
    description: Dockerfile path for build.
    default: ./Dockerfile
  - name: context
    description: Kaniko context for build.
    default: ./
  - name: extra_args
    type: array
    default: []
  - name: version
    description: Kaniko image version (default is v1.8.1)
    default: v1.8.1
  - name: verbosity
    description: Kaniko log level (<panic|fatal|error|warn|info|debug|trace>) (default is info)
    default: info
  - name: gcp_service_account_secret
    description: GCP service account secret
   

  workspaces:
  - name: source
    description: Context directory containing Dockerfile and other assets to build image


  steps:
  - name: kaniko-build
    workingDir: $(workspaces.source.path)
    image: gcr.io/kaniko-project/executor:$(params.version)
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-sa.json
    args:
    - --dockerfile=$(params.dockerfile)
    - --context=$(workspaces.source.path)/$(params.context) 
    - --destination=$(params.image_repo):$(params.image_tag)
    - --oci-layout-path=$(workspaces.source.path)/$(params.context)/image-digest 
    - --cache-dir=/cache
    - --verbosity=$(params.verbosity)
    - $(params.extra_args[*])
    securityContext:
      runAsUser: 0
    volumeMounts:
      - name: gcp-service-account-secret
        mountPath: /secret
      - name: kaniko-image-cache
        mountPath: /cache
      # Java Maven m2 cache
      #- name: m2-cache
      #  mountPath: /root/.m2

  volumes:
  - name: gcp-service-account-secret
    secret: 
      secretName: $(params.gcp_service_account_secret)
  - name: kaniko-image-cache
    persistentVolumeClaim:
      claimName: kaniko-image-cache
  # Java Maven m2 cache    
  #- name: m2-cache
  #  persistentVolumeClaim:
  #    claimName: m2-cache      
